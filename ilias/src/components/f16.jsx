/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [151.6KB] > C:\Users\bellotb\OneDrive - ILIAS Solutions NV\Documents\Frontend\ilias-webpage\ilias\public\assets\f16\scene-transformed.glb [315.27KB] (-108%)
Author: RickSlash (https://sketchfab.com/RickSlash)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/f-16-jet-69c32a15b8e24d6ebf276b76dde3ab95
Title: F-16 jet
*/

import React, { useLayoutEffect, useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import gsap from "gsap";
import { useFrame } from "react-three-fiber";

export default function F16() {
  const f16 = useGLTF('./assets/f16.glb')
  const plane = useRef();
  const scroll = useScroll();
  const tl = useRef();


  useFrame((state, delta) => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline({
      defaults: { duration: 2, ease: "power1.inOut" },
    });

    tl.current
    //eertse nummer: effect
    //tweede nummer: positie waar effect plaatsneemt

      // 0-5 pagina 1
      .to(plane.current.rotation, { y: Math.PI /-2}, 1)
      .to(plane.current.position, { x: 2}, 1)

      // 5-10 pagina 2

      // 10-15 pagina 3





      .to(plane.current.rotation, { y: 0 }, 20)
      .to(plane.current.rotation, { x: 0 }, 20)
      .to(plane.current.position, { x: 0 }, 20)


      // .to(plane.current.rotation, { y: 0 }, 3)

      // .to(plane.current.rotation, { y: -1 }, 6)
      // .to(plane.current.position, { x: 2 }, 6)

      // .to(plane.current.rotation, { y: 1 }, 9)
      // .to(plane.current.position, { x: 1 }, 9)

      // .to(plane.current.rotation, { y: 0 }, 11)
      // .to(plane.current.rotation, { x: -1 }, 11)
      // .to(plane.current.position, { x: -2 }, 11)

      // .to(plane.current.rotation, { y: 0 }, 15)
      // .to(plane.current.rotation, { x: 0 }, 15)
      // .to(plane.current.position, { x: 0 }, 15)


      // .to(plane.current.rotation, { y: 0 }, 21);
  }, []);

  return <primitive  dispose={null} ref={plane} object={f16.scene} rotation={[5,Math.PI /-2,Math.PI / -2 ]} position={[0,0,-2]} scale={[0.05, 0.05, 0.05]}  />;

}

